<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
    </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.1.0" newVersion="4.1.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.8.4.0" newVersion="5.8.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.WindowsAzure.Storage" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Essential.Diagnostics.Core" publicKeyToken="9d041bca93991466" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Services.Client" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.8.4.0" newVersion="5.8.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.8.4.0" newVersion="5.8.4.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <appSettings>
    <add key="SiteMap" value="SiteMap.xlsx" />
    <add key="SiteMapSheetName" value="SiteMap" />
    <add key="UserMapping" value="UserMappingFile.xlsx" />
    <add key="UserMappingSheetName" value="UserMappingFile" />
    <add key="MigrationType" value="All" /><!-- All/ModernPage-->
    <add key="DefaultUser" value="shiv@sshkkumar.onmicrosoft.com" />
    <add key="UserAgent" value="NONISV|PersonalProj|O365GroupMigration/1.0" />
    <add key="Delay" value="30000" />
    <add key="RetryCount" value="5" />
    
  </appSettings>
  
 <system.diagnostics>
    <sources>
      
      <source name="ModernPageMigrationFileLogger" switchName="FileSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <clear />
          <add name="rollingfile" />
        </listeners>
      </source>
    <!--<source name="Example.RollingFile.Source" switchValue="All">
        --><!--
          Add listener to source. Use named switches for multiple sources; switch values can be names, decimal, or hexadecimal.
        --><!--
        <listeners>
          <clear />
          <add name="rollingfile" />
        </listeners>
      </source>-->
   </sources>
    <switches>
      <!--<add name="mySwitch" value="Error/Verbose/Warning/All" />-->
      <add name="FileSwitch" value="All" />
      <add name="EventViewerSwitch" value="All" />
    </switches>
    <sharedListeners>
      <!--*** Write to daily rollover log files.-->
      
      <add name="rollingfile" type="Essential.Diagnostics.RollingFileTraceListener, Essential.Diagnostics.RollingFileTraceListener" initializeData="C:\Shiv\ModernPage-TraceLogs\{ApplicationName}-{DateTime:yyyy-MM-dd}.log" convertWriteToEvent="true"></add>

      <!--
          Writes to a text file, rolling to a new file based on a filename template 
          (usually including the date).
          
          Options:
            initializeData="{ApplicationName}-{DateTime:yyyy-MM-dd}.log"
            convertWriteToEvent="true|false" 
            template="{DateTime:u} [{Thread}] {EventType} {Source} {Id}: {Message}{Data}"
  
          Children:
            <filter 
              type="Essential.Diagnostics.ExpressionFilter, Essential.Diagnostics.Core"
              initializeData=' Id >= 8000 ' />
        -->
    <!--<add name="rollingfile" type="Essential.Diagnostics.RollingFileTraceListener, Essential.Diagnostics.RollingFileTraceListener" initializeData="C:\Temp\Logs\{ApplicationName}-{DateTime:yyyy-MM-dd}.log" convertWriteToEvent="true">
        --><!--
          Writes to a text file, rolling to a new file based on a filename template 
          (usually including the date).
          
          Options:
            initializeData="{ApplicationName}-{DateTime:yyyy-MM-dd}.log"
            convertWriteToEvent="true|false" 
            template="{DateTime:u} [{Thread}] {EventType} {Source} {Id}: {Message}{Data}"
  
          Children:
            <filter 
              type="Essential.Diagnostics.ExpressionFilter, Essential.Diagnostics.Core"
              initializeData=' Id >= 8000 ' />
        --><!--
      </add>-->
   </sharedListeners>
    <!--This will handle Debug and Trace output.-->
    <trace autoflush="true" indentsize="0">
      <listeners>
        <add name="rollingfile" />
      <!--
          Also add listener for legacy Trace.Write() statements (not using a TraceSource).
          For performance also clear the default listener, and turn indent off to avoid confusion for multithreaded traces.
        --><clear /></listeners>
    </trace>
  </system.diagnostics>

</configuration>